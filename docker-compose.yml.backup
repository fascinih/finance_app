version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: finance_postgres
    environment:
      POSTGRES_DB: finance_app
      POSTGRES_USER: finance_user
      POSTGRES_PASSWORD: finance_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    command: >
      postgres -c shared_buffers=256MB
               -c effective_cache_size=1GB
               -c random_page_cost=1.1
               -c checkpoint_completion_target=0.9
               -c wal_buffers=16MB
               -c synchronous_commit=off
    networks:
      - finance_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: finance_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - finance_network
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    container_name: finance_backend
    environment:
      - DATABASE_URL=postgresql://finance_user:finance_password@postgres:5432/finance_app
      - REDIS_URL=redis://redis:6379/0
      - OLLAMA_HOST=http://host.docker.internal:11434
      - ENVIRONMENT=development
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./models:/app/models
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - finance_network
    restart: unless-stopped
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload

  # Streamlit Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    container_name: finance_frontend
    environment:
      - BACKEND_URL=http://backend:8000
      - DATABASE_URL=postgresql://finance_user:finance_password@postgres:5432/finance_app
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    ports:
      - "8501:8501"
    depends_on:
      - backend
      - postgres
      - redis
    networks:
      - finance_network
    restart: unless-stopped
    command: streamlit run src/streamlit_app/main.py --server.port=8501 --server.address=0.0.0.0

  # Ollama (External - runs on host)
  # Note: Ollama should be installed and running on the host system
  # This service is for reference and monitoring only
  ollama-monitor:
    image: curlimages/curl:latest
    container_name: finance_ollama_monitor
    command: >
      sh -c "
        while true; do
          echo 'Checking Ollama connection...'
          curl -f http://host.docker.internal:11434/api/tags || echo 'Ollama not available'
          sleep 30
        done
      "
    networks:
      - finance_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  finance_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

