#!/bin/bash

# Script simples para corrigir PostgreSQL
echo "üîß Corrigindo PostgreSQL - Vers√£o Simples..."

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[POSTGRES]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[POSTGRES]${NC} $1"
}

error() {
    echo -e "${RED}[POSTGRES]${NC} $1"
}

# Verificar se PostgreSQL est√° instalado
if ! command -v psql &> /dev/null; then
    error "PostgreSQL n√£o instalado. Instalando..."
    sudo apt update
    sudo apt install -y postgresql postgresql-contrib
fi

# Iniciar servi√ßo se n√£o estiver rodando
if ! sudo systemctl is-active --quiet postgresql; then
    log "Iniciando PostgreSQL..."
    sudo systemctl start postgresql
    sudo systemctl enable postgresql
fi

# Encontrar diret√≥rio real do PostgreSQL
log "Procurando diret√≥rio de configura√ß√£o..."

POSTGRES_DIR=""
for dir in /etc/postgresql/*/main/; do
    if [ -d "$dir" ]; then
        POSTGRES_DIR="$dir"
        break
    fi
done

if [ -z "$POSTGRES_DIR" ]; then
    error "Diret√≥rio do PostgreSQL n√£o encontrado"
    exit 1
fi

POSTGRES_CONF="${POSTGRES_DIR}postgresql.conf"
log "Encontrado: $POSTGRES_CONF"

# Verificar se arquivo existe
if [ ! -f "$POSTGRES_CONF" ]; then
    error "Arquivo de configura√ß√£o n√£o encontrado: $POSTGRES_CONF"
    exit 1
fi

# Fazer backup se n√£o existe
if [ ! -f "$POSTGRES_CONF.backup" ]; then
    log "Criando backup..."
    sudo cp "$POSTGRES_CONF" "$POSTGRES_CONF.backup"
    log "Backup criado: $POSTGRES_CONF.backup"
else
    log "Backup j√° existe"
fi

# Verificar se j√° tem configura√ß√µes da Finance App
if grep -q "Finance App" "$POSTGRES_CONF"; then
    log "Configura√ß√µes j√° aplicadas"
else
    log "Aplicando configura√ß√µes otimizadas..."
    
    # Adicionar configura√ß√µes
    sudo tee -a "$POSTGRES_CONF" << 'EOF'

# ===========================================
# Otimiza√ß√µes para SSD - Finance App
# ===========================================

# Configura√ß√µes de mem√≥ria
shared_buffers = 256MB
effective_cache_size = 1GB
work_mem = 4MB
maintenance_work_mem = 64MB

# Configura√ß√µes para SSD
random_page_cost = 1.1
seq_page_cost = 1.0
effective_io_concurrency = 200

# Configura√ß√µes de checkpoint
checkpoint_completion_target = 0.9
wal_buffers = 16MB

# Configura√ß√µes de conex√£o
max_connections = 100

EOF
fi

# Reiniciar PostgreSQL
log "Reiniciando PostgreSQL..."
sudo systemctl restart postgresql

# Verificar se funcionou
if sudo systemctl is-active --quiet postgresql; then
    log "PostgreSQL reiniciado com sucesso!"
else
    error "Falha ao reiniciar PostgreSQL"
    exit 1
fi

# Testar conex√£o
log "Testando conex√£o..."
if sudo -u postgres psql -c "SELECT 1;" > /dev/null 2>&1; then
    log "Conex√£o OK!"
else
    warn "Problema na conex√£o"
fi

# Mostrar informa√ß√µes
log "Informa√ß√µes do PostgreSQL:"
echo "‚Ä¢ Vers√£o: $(sudo -u postgres psql -t -c "SELECT version();" | head -1)"
echo "‚Ä¢ Status: $(sudo systemctl is-active postgresql)"
echo "‚Ä¢ Configura√ß√£o: $POSTGRES_CONF"
echo "‚Ä¢ Backup: $POSTGRES_CONF.backup"

echo ""
echo "=================================================="
echo -e "${GREEN}‚úÖ PostgreSQL configurado com sucesso!${NC}"
echo ""
echo "Pr√≥ximos passos:"
echo "1. ./scripts/setup_database.sh  # Configurar banco da Finance App"
echo "2. ./scripts/start_all.sh       # Iniciar aplica√ß√£o completa"
echo "=================================================="

