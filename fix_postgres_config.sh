#!/bin/bash

# Script para corrigir configura√ß√£o do PostgreSQL
echo "üîß Corrigindo configura√ß√£o do PostgreSQL..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[POSTGRES-FIX]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[POSTGRES-FIX]${NC} $1"
}

error() {
    echo -e "${RED}[POSTGRES-FIX]${NC} $1"
    exit 1
}

# Verificar se PostgreSQL est√° instalado
if ! command -v psql &> /dev/null; then
    error "PostgreSQL n√£o est√° instalado. Execute primeiro: sudo apt install postgresql postgresql-contrib"
fi

# Verificar se servi√ßo est√° rodando
if ! sudo systemctl is-active --quiet postgresql; then
    log "Iniciando servi√ßo PostgreSQL..."
    sudo systemctl start postgresql
fi

# Detectar vers√£o do PostgreSQL
log "Detectando vers√£o do PostgreSQL..."
POSTGRES_VERSION=$(sudo -u postgres psql -t -c "SELECT version();" 2>/dev/null | grep -oP '\d+\.\d+' | head -1)

if [ -z "$POSTGRES_VERSION" ]; then
    # Tentar detectar pela instala√ß√£o
    POSTGRES_VERSION=$(ls /etc/postgresql/ 2>/dev/null | head -1)
fi

if [ -z "$POSTGRES_VERSION" ]; then
    error "N√£o foi poss√≠vel detectar a vers√£o do PostgreSQL"
fi

log "Vers√£o detectada: $POSTGRES_VERSION"

# Definir caminho do arquivo de configura√ß√£o
POSTGRES_CONF="/etc/postgresql/$POSTGRES_VERSION/main/postgresql.conf"

if [ ! -f "$POSTGRES_CONF" ]; then
    error "Arquivo de configura√ß√£o n√£o encontrado: $POSTGRES_CONF"
fi

log "Arquivo de configura√ß√£o: $POSTGRES_CONF"

# Fazer backup se ainda n√£o existe
if [ ! -f "$POSTGRES_CONF.backup" ]; then
    log "Criando backup da configura√ß√£o original..."
    sudo cp "$POSTGRES_CONF" "$POSTGRES_CONF.backup"
    log "Backup criado: $POSTGRES_CONF.backup"
else
    log "Backup j√° existe: $POSTGRES_CONF.backup"
fi

# Aplicar otimiza√ß√µes para SSD
log "Aplicando otimiza√ß√µes para SSD..."

# Criar arquivo tempor√°rio com configura√ß√µes
cat > /tmp/postgres_ssd_config << 'EOF'

# ===========================================
# Otimiza√ß√µes para SSD - Finance App
# ===========================================

# Configura√ß√µes de mem√≥ria (ajuste conforme sua RAM)
shared_buffers = 256MB
effective_cache_size = 1GB
work_mem = 4MB
maintenance_work_mem = 64MB

# Configura√ß√µes para SSD
random_page_cost = 1.1
seq_page_cost = 1.0
effective_io_concurrency = 200

# Configura√ß√µes de checkpoint (reduz escritas)
checkpoint_completion_target = 0.9
wal_buffers = 16MB
default_statistics_target = 100

# Configura√ß√µes de logging (reduz I/O)
log_statement = 'none'
log_min_duration_statement = 1000
log_checkpoints = off
log_connections = off
log_disconnections = off

# Configura√ß√µes de autovacuum
autovacuum = on
autovacuum_max_workers = 3
autovacuum_naptime = 1min

# Configura√ß√µes de conex√£o
max_connections = 100
EOF

# Adicionar configura√ß√µes ao arquivo principal
sudo tee -a "$POSTGRES_CONF" < /tmp/postgres_ssd_config > /dev/null

# Limpar arquivo tempor√°rio
rm -f /tmp/postgres_ssd_config

# Reiniciar PostgreSQL para aplicar configura√ß√µes
log "Reiniciando PostgreSQL para aplicar configura√ß√µes..."
sudo systemctl restart postgresql

# Verificar se reiniciou corretamente
if sudo systemctl is-active --quiet postgresql; then
    log "PostgreSQL reiniciado com sucesso!"
else
    error "Falha ao reiniciar PostgreSQL. Verifique os logs: sudo journalctl -u postgresql"
fi

# Testar conex√£o
log "Testando conex√£o..."
if sudo -u postgres psql -c "SELECT version();" > /dev/null 2>&1; then
    log "Conex√£o testada com sucesso!"
else
    warn "Problema na conex√£o. Verifique configura√ß√µes."
fi

# Mostrar status
log "Status do PostgreSQL:"
sudo systemctl status postgresql --no-pager -l | head -10

echo ""
echo "=================================================="
echo -e "${GREEN}‚úÖ PostgreSQL configurado com sucesso!${NC}"
echo ""
echo "Configura√ß√µes aplicadas:"
echo "‚Ä¢ Otimiza√ß√µes para SSD"
echo "‚Ä¢ Configura√ß√µes de mem√≥ria ajustadas"
echo "‚Ä¢ Logging otimizado"
echo "‚Ä¢ Autovacuum configurado"
echo ""
echo "Arquivos:"
echo "‚Ä¢ Configura√ß√£o: $POSTGRES_CONF"
echo "‚Ä¢ Backup: $POSTGRES_CONF.backup"
echo ""
echo "Comandos √∫teis:"
echo "‚Ä¢ Status: sudo systemctl status postgresql"
echo "‚Ä¢ Logs: sudo journalctl -u postgresql -f"
echo "‚Ä¢ Conectar: sudo -u postgres psql"
echo "‚Ä¢ Restaurar backup: sudo cp $POSTGRES_CONF.backup $POSTGRES_CONF"
echo "=================================================="

